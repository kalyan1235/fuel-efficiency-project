import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score
import numpy as np

# Load the dataset with the updated 'sep' parameter to handle spaces
file_path = '/content/auto.data'
columns = ['MPG', 'Cylinders', 'Displacement', 'Horsepower', 'Weight', 'Acceleration', 'Model Year', 'Origin', 'Car Name']

# Use read_csv with sep='\s+' to handle space-separated values
df = pd.read_csv(file_path, sep='\s+', names=columns, na_values='?', quotechar='"')

# Data cleaning and preprocessing
df['Horsepower'] = pd.to_numeric(df['Horsepower'], errors='coerce')
df.dropna(inplace=True)

# Define features and target
X = df[['Cylinders', 'Displacement', 'Horsepower', 'Weight', 'Acceleration', 'Model Year', 'Origin']]
y = df['MPG']

# Split the data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Create and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict and evaluate
y_pred = model.predict(X_test)
mse = mean_squared_error(y_test, y_pred)
r2 = r2_score(y_test, y_pred)

print(f"Mean Squared Error: {mse}")
print(f"R^2 Score: {r2}")

comparison_df = pd.DataFrame({'Actual MPG': y_test, 'Predicted MPG': y_pred})
print(comparison_df.head())
